name: Automation
on:
  push:
    branches: [ '**' ]
  release:
    types: [ published ]
  pull_request:
    branches: [ '**' ]
jobs:
  build:
    name: Build
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN || '' }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID || '' }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SOURCE_DIR: 'deploy'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install xvfb
      run: sudo apt-get install xvfb
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Install Dependencies
      run: npm ci
    # Workaround with Electron in Ubuntu 24+
    # See: https://github.com/electron/electron/issues/42510
    - name: Tune the Environment
      run: |
        sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

    - name: Build for Distribution
      run: xvfb-run --auto-servernum npm run dist

    # All the below are deploy-related steps
    - name: Extract Branch Name
      id: branch_name
      if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
      run: echo BRANCH_NAME=${GITHUB_REF/refs\/heads\//} >> $GITHUB_OUTPUT

    # Examples:
    # 1) PR feature/acme merged into dev
    # 2) branch A merged into branch B
    # 3) branch A pushed directly to git
    - name: Deploy Non-Tag Branches
      uses: jakejarvis/s3-sync-action@master
      if: github.event_name == 'push' && env.AWS_ACCESS_KEY_ID != ''
      with:
        args: --acl public-read --follow-symlinks --delete --cache-control "max-age=60"
      env:
        DEST_DIR: ${{ steps.branch_name.outputs.BRANCH_NAME }}

    # Release is published and deployed into s3://bucket-name/v5.22/
    - name: Deploy Released Branches
      uses: jakejarvis/s3-sync-action@master
      if: github.event_name == 'release' && env.AWS_ACCESS_KEY_ID != ''
      with:
        args: --acl public-read --follow-symlinks --delete --cache-control "max-age=2592000"
      env:
        DEST_DIR: ${{ github.event.release.tag_name }}

    # Same release from previous deployed into s3://bucket-name/release/
    - name: Deploy Latest Release
      uses: jakejarvis/s3-sync-action@master
      if: github.event_name == 'release' && github.event.release.prerelease == false && env.AWS_ACCESS_KEY_ID != ''
      with:
        args: --acl public-read --follow-symlinks --delete --cache-control "max-age=1209600"
      env:
        DEST_DIR: 'latest'
    
    # Automatically attach browser files to release
    - name: Upload to Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*